import config
import telebot
import io_file_operation
import io_db
import os
import json
import pandas
import datetime


# ---= –ö–õ–ê–°–° –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –õ–û–ì–ê–ú–ò =---
class LogManager:
    def __init__(self, logs_folder_path, logs_file_name):
        self.logs_folder_path = logs_folder_path
        self.logs_file_name = os.path.join(logs_folder_path, logs_file_name)
        self.logs = self._initialize_logs()

    def _initialize_logs(self):
        if not os.path.exists(self.logs_folder_path):
            os.makedirs(self.logs_folder_path)
        if not os.path.exists(self.logs_file_name):
            logs = pandas.DataFrame(columns=['request_time', 'chat_id', 'user_name', 'request_text', 'response_time', 'response_text', 'used_files', 'rating'])
            logs.to_csv(self.logs_file_name, index=False, encoding='utf-8')
            return logs    
        # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —á–∏—Ç–∞–µ–º –µ–≥–æ    
        try:
            return pandas.read_csv(self.logs_file_name, encoding='utf-8')
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–æ–≥–æ–≤: {e}")
            return pandas.DataFrame(columns=['request_time', 'chat_id', 'user_name', 'request_text', 'response_time', 'response_text', 'used_files', 'rating'])
        
    def log_rating(self, chat_id, rating):
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–æ–ª–æ–Ω–∫–∞ rating –∏–º–µ–µ—Ç —Ç–∏–ø object
        if 'rating' in self.logs.columns and self.logs['rating'].dtype != 'object':
            self.logs['rating'] = self.logs['rating'].astype('object')

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥–∞—Ö, –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–º—É chat_id
        if not self.logs.empty:
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥–∞—Ö –¥–ª—è —ç—Ç–æ–≥–æ chat_id
            self.logs.loc[self.logs['chat_id'] == chat_id, 'rating'] = rating
            print(f'[DEBUG] –û—Ü–µ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {rating}')
        else:
            print(f'[DEBUG] –õ–æ–≥–∏ –ø—É—Å—Ç—ã, –æ—Ü–µ–Ω–∫–∞ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω–∞')
            
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏
        try:
            self.logs.to_csv(self.logs_file_name, index=False, encoding='UTF-8')
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ª–æ–≥–æ–≤: {e}')

    def log_interaction(self, request_time, chat_id, user_name, request_text, response_time, response_text, used_files_path, rating=None):
        used_files_str = ", ".join(os.listdir(used_files_path)) if os.path.exists(used_files_path) else "–ü–∞–ø–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
        print(f'[DEBUG] –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ª–æ–≥–æ–≤: {used_files_str}')
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –ª–æ–≥–æ–≤
        new_array = pandas.DataFrame([{
            'request_time'  : request_time,
            'chat_id'       : chat_id,
            'user_name'     : user_name,
            'request_text'  : request_text,
            'response_time' : response_time,
            'response_text' : response_text,
            'used_files'    : used_files_str,
            'rating'        : rating
        }])

        if self.logs.empty:
            self.logs = new_array
        else:
            self.logs = pandas.concat([self.logs, new_array], ignore_index=True)

        try:
            self.logs.to_csv(self.logs_file_name, index=False, encoding='utf-8')
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–æ–≥–æ–≤: {e}')

# ---= –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–û–¢–ê =---
with open ('config.json', 'r') as config_file:
    config_data = json.load(config_file)

logs_folder_path = config_data.get('logs_folder_path')
logs_manager = LogManager(logs_folder_path, 'bot_logs.csv')
bot = telebot.TeleBot(config.bot_token)

HELP_BUTTON = '–ü–æ–º–æ—â—å'
FILES_LIST_BUTTON = '–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã'
DELETE_FILES_BUTTON = '–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã'

# ---= –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ê–ù–î =---
@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = str(message.chat.id)
    username = message.from_user.username
    first_name = message.from_user.first_name
    io_file_operation.create_user(chat_id, username)

    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(
        telebot.types.KeyboardButton(text=HELP_BUTTON),
        telebot.types.KeyboardButton(text=FILES_LIST_BUTTON),
        telebot.types.KeyboardButton(text=DELETE_FILES_BUTTON),
    )

    bot.send_message(message.chat.id,
        f"""–ü—Ä–∏–≤–µ—Ç, {first_name}! –Ø –±–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π –æ—Ç–≤–µ—Ç
        –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF –∏ –∑–∞–¥–∞–≤–∞–π –ø–æ –Ω–∏–º –≤–æ–ø—Ä–æ—Å—ã
        –ï—Å–ª–∏ —É —Ç–µ–±—è –±—É–¥—É—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ–±—Ä–∞—â–∞–π—Å—è –≤ –ö–ª—É–± –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ 1–° –ü–†–û –ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ \n\n"""
        , reply_markup=keyboard
    )

@bot.message_handler(commands=['help'])
def help_bot(message):
    chat_id = str(message.chat.id)
    username = message.from_user.username
    io_file_operation.create_user(chat_id, username)
    bot.send_message(message.chat.id, 
        f'–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n'
        f'1Ô∏è‚É£  {FILES_LIST_BUTTON} - –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ—á–µ–Ω—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤\n'
        f'2Ô∏è‚É£  {DELETE_FILES_BUTTON} - –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ä–∞–Ω–µ–µ —Ñ–∞–π–ª–æ–≤'
    )

# ---= –û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–ö–°–¢–û–í–´–• –ö–û–ú–ê–ù–î =---
@bot.message_handler(content_types=['text'])
def handle_buttons(message):
    text = message.text
    chatID = message.chat.id
    username = message.from_user.username
    io_file_operation.create_user(chatID, username)
    request_time = datetime.datetime.now()
    input_user_files = io_file_operation.return_user_folder_input(username)
    
    if text == HELP_BUTTON:    
        help_bot(message)
    elif text == FILES_LIST_BUTTON:
        io_file_operation.get_list_files(chatID, username)
    elif text == DELETE_FILES_BUTTON:
        io_file_operation.delete_all_files(chatID, username)
    else:
        if text == "":
            response_text = (chatID, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∑–∞–ø—Ä–æ—Å!')
            bot.send_message(chatID, response_text)
        elif text[0] == ".":
            bot.send_message(chatID, '–ó–∞–ø—Ä–æ—Å –Ω–µ –ø–æ —Ç–µ–∫—Å—Ç–∞–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –æ—Ç–≤–µ—Ç–∞')
            db_helper = io_db.DbHelper(chat_id=chatID, user_name=username)
            response_text = db_helper.get_free_answer(prompt=text)
            bot.send_message(chatID, response_text)
        else:
            bot.send_message (chatID, '–ó–∞–ø—Ä–æ—Å –∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–∞–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –æ—Ç–≤–µ—Ç–∞')
            try:
                db_helper = io_db.DbHelper(chat_id=chatID, user_name=username)
                answer = db_helper.get_answer(prompt=text)
                if answer:
                    response_text = f'–û—Ç–≤–µ—Ç: {answer}\n\n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞:'

                    keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
                    keyboard.add(
                        telebot.types.InlineKeyboardButton('üëç', callback_data=f'rate_{chatID}_up'),
                        telebot.types.InlineKeyboardButton('üëé', callback_data=f'rate_{chatID}_down')
                    )
                    bot.send_message(chatID, response_text, reply_markup=keyboard)
                else:
                    response_text = '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç!'
                    bot.send_message(chatID, response_text)
            except Exception as e:
                response_text = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.'
                bot.send_message(chatID, response_text)
                print(f'–û—à–∏–±–∫–∞ –≤ get_answer: {e}')
    
    #–õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è
        logs_manager.log_interaction(
            request_time    =request_time,
            chat_id         =chatID,
            user_name       =username,
            request_text    =text,
            response_time   =datetime.datetime.now(),
            response_text   =response_text,
            used_files_path =input_user_files,
            rating=None
    )

# ---= –û–ë–†–ê–ë–û–¢–ö–ê –î–û–ö–£–ú–ï–¢–û–í =---
@bot.message_handler(content_types=['document'])
def handle_document(message):
    chatID = message.chat.id
    username = message.from_user.username
    io_file_operation.create_user(chatID, username)
    file_info = bot.get_file(message.document.file_id)
    file_name = message.document.file_name

    dowloaded_file = bot.download_file(file_info.file_path)
    user_input_folder = io_file_operation.return_user_folder_input(username)
    save_path = os.path.join(user_input_folder, file_name)
    
    with open(save_path, 'wb') as new_file:
        new_file.write(dowloaded_file)

    io_file_operation.process_files(chatID, username)

    bot.send_message(chatID, f"–§–∞–π–ª '{file_name}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")

# ---= –û–ë–†–ê–ë–û–¢–ö–ê –ù–ï–ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú–´–• –î–û–ö–£–ú–ï–¢–û–í =---
@bot.message_handler(content_types=['photo', 'audio', 'video', 'voice', 'sticker', 'animation', 'video_note'])
def handle_unsupported_files(message):
    bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä PDF, TXT –∏–ª–∏ DOC). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞")

# ---= –û–ë–†–ê–ë–û–¢–ö–ê –û–¶–ï–ù–ö–ò –û–¢–í–ï–¢–û–í =---
@bot.callback_query_handler(func=lambda call: call.data.startswith('rate_'))
def handle_rating(call):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data
    _, chat_id, rating = call.data.split('_')  #–ù–∞–ø—Ä–∏–º–µ—Ä, rate_12321321_up
    chat_id = int(chat_id)
    rating_value = 'üëç' if rating == 'up' else 'üëé'

    logs_manager.log_rating(chat_id=chat_id, rating=rating_value)

    bot.answer_callback_query(call.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ—Ü–µ–Ω–∫—É:{rating_value}')

# ---= –ó–ê–ü–£–°–ö –ë–û–¢–ê =---
try:
    print("–ë–û–¢ –ó–ê–ü–£–©–ï–ù!")
    bot.polling(none_stop=True, interval=1)
except Exception as e:
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ 
    print(f"–û—à–∏–±–∫–∞:{e}")
finally:
    bot.stop_polling()
    print("–ë–û–¢ –û–°–¢–ê–ù–û–í–õ–ï–ù")